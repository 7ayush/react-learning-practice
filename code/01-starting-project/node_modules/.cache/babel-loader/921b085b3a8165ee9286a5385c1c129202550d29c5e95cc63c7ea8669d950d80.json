{"ast":null,"code":"var _jsxFileName = \"/Users/ayushkaushik/Desktop/react-complete-guide-code/code/01-starting-project/src/components/Login/Login.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useReducer, useRef, useContext } from 'react';\nimport Card from '../UI/Card/Card';\nimport classes from './Login.module.css';\nimport Button from '../UI/Button/Button';\nimport Input from '../UI/Input/Input';\nimport AuthContext from '../../store/AuthContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst emailReducer = (state, action) => {\n  if (action.type === \"USER_INPUT\") {\n    return {\n      value: action.val,\n      isValid: action.val.includes('@')\n    };\n  } else if (action.type === \"INPUT_BLUR\") {\n    return {\n      value: state.value,\n      isValid: state.value.includes('@')\n    };\n  }\n  return state;\n};\nconst passwordReducer = (state, action) => {\n  if (action.type === \"USER_INPUT\") {\n    return {\n      value: action.val,\n      isValid: action.val.trim().length > 6\n    };\n  } else if (action.type === \"INPUT_BLUR\") {\n    return {\n      value: state.value,\n      isValid: state.value.trim().length > 6\n    };\n  }\n  return state;\n};\nconst Login = props => {\n  _s();\n  // const [enteredEmail, setEnteredEmail] = useState('');\n  // const [emailIsValid, setEmailIsValid] = useState();\n  // const [enteredPassword, setEnteredPassword] = useState('');\n  // const [passwordIsValid, setPasswordIsValid] = useState();\n  const [formIsValid, setFormIsValid] = useState(false);\n  const inputRef = useRef();\n  const ctx = useContext(AuthContext);\n  const [emailState, dispatchEmail] = useReducer(emailReducer, {\n    value: '',\n    isValid: false\n  });\n  const [passwordState, dispatchPassword] = useReducer(passwordReducer, {\n    value: '',\n    isValid: false\n  });\n  const {\n    isValid: emailIsValid\n  } = emailState;\n  const {\n    isValid: passwordIsValid\n  } = passwordState;\n  useEffect(() => {\n    const identifier = setTimeout(() => {\n      console.log('checking');\n      setFormIsValid(emailIsValid && passwordIsValid);\n    }, 500);\n    return () => {\n      console.log('CLEANUP');\n      clearInterval(identifier);\n    };\n  }, [emailIsValid, passwordIsValid]);\n  const emailChangeHandler = event => {\n    // setEnteredEmail(event.target.value);    \n    dispatchEmail({\n      type: 'USER_INPUT',\n      val: event.target.value\n    });\n    setFormIsValid(emailState.isValid && passwordState.isValid);\n  };\n  const passwordChangeHandler = event => {\n    // setEnteredPassword(event.target.value);\n    dispatchPassword({\n      type: 'USER_INPUT',\n      val: event.target.value\n    });\n    setFormIsValid(emailState.isValid && passwordState.isValid);\n  };\n  const validateEmailHandler = () => {\n    dispatchEmail({\n      type: 'INPUT_BLUR'\n    });\n    setFormIsValid(emailState.isValid && passwordState.isValid);\n    // setEmailIsValid(enteredEmail.includes('@'));\n  };\n\n  const validatePasswordHandler = () => {\n    // setPasswordIsValid(enteredPassword.trim().length > 6);\n    dispatchPassword({\n      type: 'INPUT_BLUR'\n    });\n  };\n  const submitHandler = event => {\n    event.preventDefault();\n    if (formIsValid) {\n      ctx.onLogin(emailState.value, passwordState.value);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Card, {\n    className: classes.login,\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: submitHandler,\n      children: [/*#__PURE__*/_jsxDEV(Input, {\n        id: \"email\",\n        label: \"E-Mail\",\n        type: \"email\",\n        isValid: emailIsValid,\n        value: emailState.value,\n        onChange: emailChangeHandler,\n        onBlur: validateEmailHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        id: \"password\",\n        label: \"Password\",\n        type: \"password\",\n        isValid: passwordIsValid,\n        value: passwordState.value,\n        onChange: passwordChangeHandler,\n        onBlur: validatePasswordHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.actions,\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          className: classes.btn,\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 106,\n    columnNumber: 5\n  }, this);\n};\n_s(Login, \"33C3du7NChWri4F9DGKEhUvExDE=\");\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","useEffect","useReducer","useRef","useContext","Card","classes","Button","Input","AuthContext","jsxDEV","_jsxDEV","emailReducer","state","action","type","value","val","isValid","includes","passwordReducer","trim","length","Login","props","_s","formIsValid","setFormIsValid","inputRef","ctx","emailState","dispatchEmail","passwordState","dispatchPassword","emailIsValid","passwordIsValid","identifier","setTimeout","console","log","clearInterval","emailChangeHandler","event","target","passwordChangeHandler","validateEmailHandler","validatePasswordHandler","submitHandler","preventDefault","onLogin","className","login","children","onSubmit","id","label","onChange","onBlur","fileName","_jsxFileName","lineNumber","columnNumber","actions","btn","_c","$RefreshReg$"],"sources":["/Users/ayushkaushik/Desktop/react-complete-guide-code/code/01-starting-project/src/components/Login/Login.js"],"sourcesContent":["import React, { useState, useEffect, useReducer, useRef, useContext } from 'react';\n\nimport Card from '../UI/Card/Card';\nimport classes from './Login.module.css';\nimport Button from '../UI/Button/Button';\nimport Input from '../UI/Input/Input';\nimport AuthContext from '../../store/AuthContext';\n\nconst emailReducer = (state, action) =>{\n  if(action.type ===\"USER_INPUT\"){\n    return {value : action.val, isValid : action.val.includes('@')};\n  }\n  else if(action.type === \"INPUT_BLUR\"){\n    return {value :state.value, isValid : state.value.includes('@')};\n  }\n  return state; \n};\n\nconst passwordReducer = (state, action) =>{\n  if(action.type ===\"USER_INPUT\"){\n    return {value : action.val, isValid : action.val.trim().length>6};\n  }\n  else if(action.type === \"INPUT_BLUR\"){\n    return {value :state.value, isValid : state.value.trim().length>6};\n  }\n  return state; \n};\n\n\nconst Login = (props) => {\n  // const [enteredEmail, setEnteredEmail] = useState('');\n  // const [emailIsValid, setEmailIsValid] = useState();\n  // const [enteredPassword, setEnteredPassword] = useState('');\n  // const [passwordIsValid, setPasswordIsValid] = useState();\n  const [formIsValid, setFormIsValid] = useState(false);\n\n  const inputRef = useRef();\n  const ctx = useContext(AuthContext);\n\n  const [emailState, dispatchEmail] = useReducer(emailReducer, {\n    value : '',\n    isValid : false\n  });\n\n  const [passwordState, dispatchPassword] = useReducer(passwordReducer, {\n    value : '',\n    isValid : false\n  });\n\n  const {isValid : emailIsValid} = emailState;\n  const {isValid : passwordIsValid} = passwordState;\n  useEffect(()=>{    \n    const identifier = setTimeout(()=>{\n      console.log('checking');\n      setFormIsValid(\n        emailIsValid && passwordIsValid\n      );\n    },500);\n    return ()=>{\n      console.log('CLEANUP');\n      clearInterval(identifier);\n    };\n  },[emailIsValid,passwordIsValid]);\n\n\n\n  const emailChangeHandler = (event) => {\n    // setEnteredEmail(event.target.value);    \n    dispatchEmail({type:'USER_INPUT', val: event.target.value});\n    setFormIsValid(\n      emailState.isValid && passwordState.isValid\n    );\n  };\n\n  const passwordChangeHandler = (event) => {\n    // setEnteredPassword(event.target.value);\n    dispatchPassword({type:'USER_INPUT', val:event.target.value});\n    setFormIsValid(\n      emailState.isValid && passwordState.isValid\n    );\n  };\n\n  const validateEmailHandler = () => {\n    dispatchEmail({type :'INPUT_BLUR'})\n    \n    setFormIsValid(\n      emailState.isValid && passwordState.isValid\n    );\n    // setEmailIsValid(enteredEmail.includes('@'));\n  };\n\n  const validatePasswordHandler = () => {\n    // setPasswordIsValid(enteredPassword.trim().length > 6);\n    dispatchPassword({type:'INPUT_BLUR'})\n  };\n\n  const submitHandler = (event) => {\n    event.preventDefault();\n    if(formIsValid){\n      ctx.onLogin(emailState.value, passwordState.value);\n    }\n    \n  };\n\n  return (\n    <Card className={classes.login}>\n      <form onSubmit={submitHandler}>\n        <Input \n          id=\"email\" \n          label=\"E-Mail\" \n          type=\"email\" \n          isValid={emailIsValid} \n          value={emailState.value} \n          onChange={emailChangeHandler} \n          onBlur={validateEmailHandler}\n        />\n        <Input \n          id=\"password\" \n          label=\"Password\" \n          type=\"password\" \n          isValid={passwordIsValid} \n          value={passwordState.value} \n          onChange={passwordChangeHandler} \n          onBlur={validatePasswordHandler}\n        />\n        <div className={classes.actions}>\n          <Button type=\"submit\" className={classes.btn}>\n            Login\n          </Button>\n        </div>\n      </form>\n    </Card>\n  );\n};\n\nexport default Login;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}